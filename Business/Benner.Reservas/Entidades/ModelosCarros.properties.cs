//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

using Benner.Tecnologia.Business;
using Benner.Tecnologia.Common;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text;


namespace Benner.Reservas.Entidades
{
    
    
    /// <summary>
    /// Interface para a tabela MODELOSCARROS
    /// </summary>
    public partial interface IModelosCarros : IEntityBase
    {
        
        /// <summary>
        /// Ano (ANO.)
        /// Opcional = N, Invisível = False, Formato Data = Ano - Formato Hora = Sem hora
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        System.Nullable<System.DateTime> Ano
        {
            get;
            set;
        }
        
        /// <summary>
        /// Código (CODIGO.)
        /// Opcional = N, Invisível = False, Tamanho = 8
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        string Codigo
        {
            get;
            set;
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        Benner.Tecnologia.Common.IEntityBase MarcaInstance
        {
            get;
            set;
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        Handle MarcaHandle
        {
            get;
            set;
        }
        
        /// <summary>
        /// Nome (NOME.)
        /// Opcional = N, Invisível = False, Tamanho = 90
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        string Nome
        {
            get;
            set;
        }
        
        /// <summary>
        /// Opcionais (OPCIONAIS.)
        /// Opcional = S, Invisível = False
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        System.Nullable<ModelosCarrosOpcionaisEnum> Opcionais
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// Interface para o DAO para a tabela MODELOSCARROS
    /// </summary>
    public partial interface IModelosCarrosDao : IBusinessEntityDao<IModelosCarros>
    {
    }
    
    /// <summary>
    /// DAO para a tabela MODELOSCARROS
    /// </summary>
    public partial class ModelosCarrosDao : BusinessEntityDao<ModelosCarros, IModelosCarros>, IModelosCarrosDao
    {
        
        public static ModelosCarrosDao CreateInstance()
        {
            return CreateInstance<ModelosCarrosDao>();
        }
    }
    
    /// <summary>
    /// Este enumerador contém os itens do campo OPCIONAIS.
    /// </summary>
    [Flags()]
    public enum ModelosCarrosOpcionaisEnum
    {
        
        [Description("Ar Condicionado")]
        Arcondicionado = 1,
        
        [Description("Direção hidráulica")]
        Direcaohidraulica = 2,
        
        [Description("Central multimídia")]
        Multimidia = 4,
    }
    
    /// <summary>
    /// ModelosCarros
    /// </summary>
    [EntityDefinitionName("MODELOSCARROS")]
    [DataContract(Namespace = "http://Benner.Tecnologia.Common.DataContracts/2007/09", Name = "EntityBase")]
    public partial class ModelosCarros : BusinessEntity<ModelosCarros>, IModelosCarros
    {
        
        /// <summary>
        /// Possui constantes para retornarem o nome dos campos definidos no Builder para cada propriedade
        /// </summary>
		public static class FieldNames
		{
			public const string Ano = "ANO";
			public const string Codigo = "CODIGO";
			public const string Marca = "MARCA";
			public const string Nome = "NOME";
			public const string Opcionais = "OPCIONAIS";
		}

        
        /// <summary>
        /// Ano (ANO.)
        /// Opcional = N, Invisível = False, Formato Data = Ano - Formato Hora = Sem hora
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        public System.Nullable<System.DateTime> Ano
        {
            get
            {
                return Fields["ANO"] as System.Nullable<System.DateTime>;
            }
            set
            {
                Fields["ANO"] = value;
            }
        }
        
        /// <summary>
        /// Código (CODIGO.)
        /// Opcional = N, Invisível = False, Tamanho = 8
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        public string Codigo
        {
            get
            {
                return Fields["CODIGO"] as System.String;
            }
            set
            {
                Fields["CODIGO"] = value;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        public Benner.Tecnologia.Common.IEntityBase MarcaInstance
        {
            get
            {
                if (Marca.Handle == null)
                {
					return null;
                }
                return Marca.Instance;
            }
            set
            {
                if (value == null)
                {
					Marca = null;
					return;
                }
                Marca.Instance = (EntityBase) value;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        public Handle MarcaHandle
        {
            get
            {
                return Marca.Handle;
            }
            set
            {
                Marca.Handle = value;
            }
        }
        
        /// <summary>
        /// Marca (MARCA.)
        /// Opcional = N, Invisível = False, Pesquisar = MARCAS
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        public Benner.Tecnologia.Common.EntityAssociation Marca
        {
            get
            {
                return Fields["MARCA"] as Benner.Tecnologia.Common.EntityAssociation;
            }
            set
            {
                if (value == null)
                {
                    this.Marca.Handle = null;
                }
                else
                {
                    if (value.IsLoaded)
                    {
                        this.Marca.Instance = value.Instance;
                    }
                    else
                    {
                        this.Marca.Handle = value.Handle;
                    }
                }
            }
        }
        
        /// <summary>
        /// Nome (NOME.)
        /// Opcional = N, Invisível = False, Tamanho = 90
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        public string Nome
        {
            get
            {
                return Fields["NOME"] as System.String;
            }
            set
            {
                Fields["NOME"] = value;
            }
        }
        
        /// <summary>
        /// Opcionais (OPCIONAIS.)
        /// Opcional = S, Invisível = False
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "22.0.36.3")]
        public System.Nullable<ModelosCarrosOpcionaisEnum> Opcionais
        {
            get
            {
                object result = Fields["OPCIONAIS"];
                if (result != null)
                    return (System.Nullable<ModelosCarrosOpcionaisEnum>)Convert.ToInt64(result);
                return Fields["OPCIONAIS"] as System.Nullable<ModelosCarrosOpcionaisEnum>;
            }
            set
            {
                if (value == null)
                    Fields["OPCIONAIS"] = null;
                else
                    Fields["OPCIONAIS"] = Convert.ToInt32(value.Value);
            }
        }
    }
}
